name: Update assets

on:
  workflow_dispatch:
  schedule:
    - cron: '0 17 * * *'

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        path: updater
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: tohenk/ntjs-web-assets
        token: ${{ secrets.TOKEN }}
        path: repository
        fetch-depth: 0
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        cache: 'npm'
        cache-dependency-path: 'updater/package-lock.json'
    - name: Install dependencies
      run: cd updater && node deps.js && ./deps.sh
    - name: Update assets
      run: |
        cd updater
        if [ "x${_VERBOSE}" = "xTRUE" -o "x${_VERBOSE}" = "x1" ]; then
          node index.js --verbose ../repository
        else
          node index.js ../repository
        fi
      env:
        _VERBOSE: ${{ vars.UPDATE_VERBOSE }}
    - name: Commit assets changes
      run: |
        cd repository
        CD=$(pwd)

        set +e

        git config user.name github-actions
        git config user.email github-actions@github.com

        PKG=0
        [ "x${_EACH_PACKAGE}" = "xTRUE" -o "x${_EACH_PACKAGE}" = "x1" ] && PKG=1
        CDN=$CD/cdn.json
        CNT=0
        CHANGES=""

        commit_changes() {
          CDIR=$1
          PREFIX=$2
          cd "${CDIR}"
          for DIR in `ls`; do
            ASSETDIR=$CDIR/$DIR
            if [ -d "${ASSETDIR}" ]; then
              cd "${ASSETDIR}"
              CHANGED=$(git diff .)
              UNTRACKED=$(git status . | grep "Untracked files")
              if [ -n "${CHANGED}" -o -n "${UNTRACKED}" ]; then
                ASSET=$DIR
                if [ -n "$PREFIX" ]; then
                  ASSET="${PREFIX}-${ASSET}"
                fi
                VER=$(awk "/\"${ASSET}\": {/,/\"version\": \"*\"/ { if (\$2 != \"{\") print \$2 }" ${CDN} | egrep -o "([0-9]{1,}\.)+[0-9]{1,}[A-Za-z0-9\-]{0,}")
                if [ -n "${VER}" ]; then
                  MSG="Update ${ASSET} to ${VER}"
                else
                  MSG="Updated ${ASSET}"
                fi
                echo "> ${DIR} ${VER}"
                git add .
                if [ $PKG -eq 1 ]; then
                  git commit -m "${MSG}."
                else
                  if [ -n "${CHANGES}" ]; then
                    CHANGES+="
        "
                  fi
                  CHANGES+="- ${MSG}"
                fi
                CNT=$((CNT+1))
              fi
            fi
          done
        }

        # check changes of each package and commit if necessary
        commit_changes $CD/DataTables/Extensions DataTables
        commit_changes $CD

        # check for cdn.json changes
        cd $CD
        if [ -n "$(git diff cdn.json)" ]; then
          git add cdn.json
          if [ $PKG -eq 1 ]; then
            git commit -m "Automatic CDN update."
          fi
          CNT=$((CNT+1))
        fi

        # commit changes and push commits
        if [ $CNT -gt 0 ]; then
          echo "Pushing changes..."
          if [ $PKG -eq 0 ]; then
            git commit -m "Automatic assets update.

        ${CHANGES}"
          fi
          git push
        fi
      env:
        _EACH_PACKAGE: ${{ vars.UPDATE_COMMIT_PACKAGE }}